name: Deployment - Reuseable Workflow

on:
    workflow_call:

jobs:
    reuse-deploy:
        environment:
          name: development
          url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        outputs:
          APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4  
        
        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v4

        - name: Set KUBECONFIG File
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}

        - name: Fetch Kubernetes Cluster Details
          continue-on-error: true
          run: |
            kubectl version
            echo -------------------------------
            kubectl get nodes

        - name: Save Nginx Ingress Controller IP as a GITHUB Environment Variable
          continue-on-error: true
          run: |
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> "$GITHUB_ENV"
        
        - name: Replace Token in Manifest files
          continue-on-error: true
          uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            INGRESS_IP: ${{ env.INGRESS_IP }}
        
        - name: Check Manifest Files
          run: |
            cat kubernetes/development/*.yaml

        - name: Create MongoDB Secret
          continue-on-error: true
          run: |
            kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
            --from-literal=MONGO_URI= ${{env.MONGO_URI }} \
            --from-literal=MONGO_USERNAME: ${{ vars.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }} \
            --save-config \
            --dry-run=client \
            -o yaml | kubectl apply -f -

        - name: Deploy to DEV Env
          continue-on-error: true
          run: |
            kubectl apply -f kubernetes/development

        - name: Set Application Ingress Host URL
          continue-on-error: true        
          id: set-ingress-host-address
          run: |
            echo "APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")" >> "$GITHUB_OUTPUT"

